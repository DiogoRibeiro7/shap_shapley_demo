# Docker Compose configuration for SHAP Analytics
# Includes API server, Redis cache, and MLflow tracking server

version: '3.8'

services:
  # SHAP Analytics API
  shap-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: shap-analytics-api
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=production
      - LOG_LEVEL=INFO
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - API_WORKERS=4
    volumes:
      - ./models:/app/models:ro
      - ./logs:/app/logs
    depends_on:
      - redis
      - mlflow
    networks:
      - shap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: shap-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    networks:
      - shap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MLflow tracking server
  mlflow:
    image: python:3.10-slim
    container_name: shap-mlflow
    ports:
      - "5000:5000"
    command: >
      sh -c "pip install mlflow boto3 pymysql &&
             mlflow server
             --host 0.0.0.0
             --port 5000
             --backend-store-uri sqlite:///mlflow/mlflow.db
             --default-artifact-root ./mlflow/artifacts"
    volumes:
      - mlflow-data:/mlflow
    networks:
      - shap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: shap-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - shap-api
    networks:
      - shap-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis-data:
    driver: local
  mlflow-data:
    driver: local

networks:
  shap-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Development override example:
# docker-compose -f compose.yaml -f compose.dev.yaml up
